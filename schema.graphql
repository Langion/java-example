"""Любое значение которое не получилось сериализовать"""
scalar Any

input DeleteHotelParamsExampleHotelMutationInterplayInput {
  """The ID of the existing hotel resource."""
  id: Float!
}

enum Direction {
  ASC
  DESC
}

type Example {
  Hotel: HotelExampleExample
}

type ExampleMutation {
  HotelMutation: HotelMutationExample
}

input GetAllHotelQueryInput {
  """Tha page size"""
  size: Float!

  """The page number (zero-based)"""
  page: Float!
}

input GetHotelParamsInput {
  """The ID of the hotel."""
  id: Float!
}

"""a simple domain entity doubling as a DTO"""
type HotelExample {
  city: String
  name: String
  rating: Float
  description: String
  id: Float
}

type HotelExampleExample {
  getAllHotel(query: GetAllHotelQueryInput): Page_HotelExample
  getHotel(params: GetHotelParamsInput!): HotelExample
}

"""a simple domain entity doubling as a DTO"""
input HotelExampleInput {
  city: String
  name: String
  rating: Float
  description: String
  id: Float
}

type HotelMutationExample {
  createHotel(payload: HotelExampleInput!): Any
  deleteHotel(params: DeleteHotelParamsExampleHotelMutationInterplayInput!): Any
  updateHotel(params: UpdateHotelParamsExampleHotelMutationInterplayInput!, payload: HotelExampleInput!): Any
}

type Mutation {
  ExampleMutation: ExampleMutation
}

enum NullHandling {
  NATIVE
  NULLS_FIRST
  NULLS_LAST
}

type Order {
  serialVersionUID: Float
  nullHandling: NullHandling
  ignoreCase: Boolean
  property: String
  DEFAULT_IGNORE_CASE: Boolean
  direction: Direction
  descending: Boolean
  ascending: Boolean
}

type Page_HotelExample {
  last: Boolean
  content: [HotelExample]
  number: Float
  sort: Sort
  first: Boolean
  size: Float
  numberOfElements: Float
  totalElements: Float
  totalPages: Float
}

type Query {
  Example: Example
}

type Sort {
  DEFAULT_DIRECTION: Direction
  serialVersionUID: Float
  orders: [Order]
  orderFor: Order
}

input UpdateHotelParamsExampleHotelMutationInterplayInput {
  """The ID of the existing hotel resource."""
  id: Float!
}
