input AddRefinancingCreditsParamsCommonRefinancingOfferCreditMutationInterplayInput {
  """ID предложения"""
  offerId: Float!
}

type AddressDto {
  id: Float
  version: Float
  apartmentNo: String
  districtName: String

  """Город в родительном падеже"""
  cityNameGen: String
  index: String

  """Адрес ФИАС"""
  isAddressFIAS: Boolean
  descriptor: String

  """Город в предложном падеже"""
  cityNamePrep: String

  """Город в творительном падеже"""
  cityNameInstr: String
  streetName: String
  structureNo: String
  cityName: String
  settlementName: String
  buildingNo: String

  """Город в винительном падеже"""
  cityNameAcc: String
  fullAddress: String
  houseNo: String
  region: RegionDto

  """Город в дательном падеже"""
  cityNameDat: String

  """Идентификатор дома"""
  houseGuid: String

  """Идентификатор адресного объекта"""
  addressGuid: String
}

"""Любое значение которое не получилось сериализовать"""
scalar Any

type ApplicantDto {
  id: Float
  version: Float
  isResidenceAddress: Boolean
  residenceCause: ResidenceCauseDto
  certificateEndDate: Any
  maternityCapitalAmount: Float
  roleMainBorrower: Boolean
  passport: PassportDto
  registrationEndDate: Any
  mortgagePersonDocs: [DocumentDto]
  oldPassport: PassportDto
  socialGroup: SocialGroupType
  rolePledger: Boolean
  certificateDate: Any

  """Действительно до (согласие на обработку персональных данных)"""
  agreeExpirationDate: Any
  hasOldPassport: Boolean
  registrationAddress: AddressDto

  """Дата предоставления (согласия на обработку персональных данных)"""
  agreeDate: Any
  certificateNo: String
  birthDate: Any
  registrationType: RegistrationType
  person: Person
  lastPlaceResidenceTerm: Float
  roleParticipant: Boolean
  residenceAddress: AddressDto
  contacts: [ContactDto]
  idNA: Float
}

type AppraiserDto {
  id: Float

  """ИНН"""
  inn: String
  appraiserHeadEmployee: AppraiserHeadEmployeeDto

  """Наименование организации"""
  shortName: String
}

type AppraiserHeadEmployeeDto {
  """Фамилия"""
  lastName: String

  """Имя"""
  firstName: String

  """Отчество"""
  middleName: String
}

type ApprovedParamsDto {
  id: Float
  version: Float

  """Утвержденный ежемесячный платеж"""
  approvedPaymentTotal: Float
  serialVersionUID: Float

  """Утвержденный коэффициент К/З"""
  approvedCreditToPledge: Float

  """Утвержденный срок кредита"""
  approvedPeriod: Float

  """Утвержденная сумма кредита"""
  approvedAmount: Float
}

type AuditRecord {
  date: Any
  event: String
}

input CalculateDealControllerParamsCommonRefinancingDealMutationInterplayInput {
  """ID сделки"""
  id: Float!
}

input ChangeCreditsStatusParamsCommonRefinancingDealMutationInterplayInput {
  """ИД сделки"""
  id: Float!
}

input ChangeStatusParamsCommonRefinancingDealMutationInterplayInput {
  """ИД сделки"""
  id: Float!
}

input ChangeStatusParamsCommonRefinancingOfferMutationInterplayInput {
  id: Float!
}

type Child {
  id: Float
  birthDate: Any!
}

input ChildInput {
  id: Float
  birthDate: Any!
}

type Common {
  MortgageCoefficientType: MortgageCoefficientTypeCommonCommon
  NewAthenaStub: NewAthenaStubCommon
  PersonServiceApi: PersonServiceApiCommon
  RefinancingCredit: RefinancingCreditCommon
  RefinancingCreditStatus: RefinancingCreditStatusCommonCommon
  RefinancingDeal: RefinancingDealCommon
  RefinancingDealCredit: RefinancingDealCreditCommon
  RefinancingDealState: RefinancingDealStateCommon
  RefinancingDealStatus: RefinancingDealStatusCommonCommon
  RefinancingDealType: RefinancingDealTypeCommonCommon
  RefinancingMortgage: RefinancingMortgageCommon
  RefinancingOffer: RefinancingOfferCommon
  RefinancingOfferCredit: RefinancingOfferCreditCommon
  RefinancingOfferDeal: RefinancingOfferDealCommon
  RefinancingOfferStatus: RefinancingOfferStatusCommonCommon
  RefinancingType: RefinancingTypeCommonCommon
  RefinancingVersion: RefinancingVersionCommon
  Reports: ReportsCommon
}

type CommonMutation {
  NewAthenaStubMutation: NewAthenaStubMutationCommon
  PersonServiceApiMutation: PersonServiceApiMutationCommon
  RefinancingCreditMutation: RefinancingCreditMutationCommon
  RefinancingDealMutation: RefinancingDealMutationCommon
  RefinancingDealCreditMutation: RefinancingDealCreditMutationCommon
  RefinancingDealStateMutation: RefinancingDealStateMutationCommon
  RefinancingIntegrationMutation: RefinancingIntegrationMutationCommon
  RefinancingOfferMutation: RefinancingOfferMutationCommon
  RefinancingOfferCreditMutation: RefinancingOfferCreditMutationCommon
  RefinancingOfferDealMutation: RefinancingOfferDealMutationCommon
  RefinancingServiceMutation: RefinancingServiceMutationCommon
}

input CompleteReasonInput {
  reference: String
  code: String
  name: String
}

input CompleteTaskDtoInput {
  variables: Any
  completeReason: CompleteReasonInput
  userName: String
}

input CompleteTaskParamsCommonRefinancingDealStateMutationInterplayInput {
  id: Float!
}

input CompleteTaskParamsCommonRefinancingOfferDealMutationInterplayInput {
  """ID КД в mortgage-service"""
  id: Float!
}

input CompleteTaskParamsCommonRefinancingOfferMutationInterplayInput {
  id: Float!
}

type ConditionTypeDto {
  code: String
  name: String
}

type ContactDto {
  id: Float
  version: Float
  notUsed: Boolean
  isMain: Boolean
  contactType: ContactType
  comment: String
  value: String
}

enum ContactType {
  MOBILEPHONE
  LIVEPHONE
  HOMEPHONE
  FAX
  EMAIL
  WORKPHONE
}

"""Удостоверяющий документ"""
type ContractOfPurchaseDto {
  """Форма собственности"""
  ownership: Ownership

  """Тип договора"""
  contractType: ContractType

  """Номер договора"""
  contractNo: String

  """Наименование договора"""
  contractName: String
}

enum ContractType {
  ASSIGNMENT_OF_CLAIMS
  SHARE
  PURCHASE
}

type CreditProductDto {
  id: Float
  name: String
}

type CreditPurposeDto {
  code: String
  name: String
}

input DeleteRefinancingCreditParamsCommonRefinancingOfferCreditMutationInterplayInput {
  """ID предложения"""
  offerId: Float!

  """ID закладной"""
  id: Float!
}

enum Direction {
  ASC
  DESC
}

type DocTypeDto {
  code: String
  name: String
}

type DocumentDto {
  id: Float
  version: Float
  serialVersionUID: Float
  comment: String
  documentId: Float
  type: String
}

"""Передача документа"""
type DocumentTransferDto {
  id: Float
  version: Float

  """Отправитель"""
  transferSender: PartnerDto

  """Получатель"""
  transferReceiver: PartnerDto

  """Тип документа"""
  typeDoc: DocTypeDto

  """Примечание"""
  comment: String

  """Дата передачи"""
  transferDate: Any

  """Статус"""
  status: DocumentTransferStatus
}

enum DocumentTransferStatus {
  TRANSMITTED
  RECEIVED
  NEW
  COURIERSERVICE
}

type EgrpAuthorityDto {
  id: Float
  version: Float
  code: String
  name: String
}

type EgrpPlaceDto {
  id: Float
  version: Float
  code: String
  name: String
}

"""Госрегистрация в ЕГРП"""
type EgrpRegistrationDto {
  """Орган, осуществивший регистрацию в ЕГРП"""
  egrpRegAuthority: EgrpAuthorityDto
  egrpRegPlace: EgrpPlaceDto

  """Номер регистрации в ЕГРП"""
  egrpRegNo: String

  """Дата регистрации в ЕГРП"""
  egrpRegDate: Any
}

type EmployeeDto {
  id: Float
  name: String
}

type EnumDto {
  code: String
  name: String
}

input EnumDtoInput {
  code: String
  name: String
}

"""
@author Timur_Sokolov Dto для передачи информации о произошедшей ошибке.
"""
type ErrorTypeEnumDto {
  code: String
  name: String

  """Id объектов, в которых произошла ошибка"""
  idsWithError: [Float]

  """
  Номера объектов для отображения в сообщении, в которых произошла ошибка
  """
  errorMessageFormatingArgs: [String]
}

input EvaluateRefinancingCreditCreditCoefficientParamsInput {
  """ID закладной"""
  id: Float!
}

type ExpenseTypeDto {
  id: Float
  code: String
  name: String
}

"""Заёмщик"""
type ExternalBorrowerDto {
  """Фамилия заёмщика"""
  lastName: String

  """Имя заёмщика"""
  firstName: String
  id: Float!

  """Отчество заёмщика"""
  middleName: String

  """День рождения заёмщика"""
  birthDate: Any
}

"""Заёмщик"""
input ExternalBorrowerDtoInput {
  """Фамилия заёмщика"""
  lastName: String

  """Имя заёмщика"""
  firstName: String
  id: Float!

  """Отчество заёмщика"""
  middleName: String

  """День рождения заёмщика"""
  birthDate: Any
}

"""Договор - ДКПЗ"""
type ExternalContractDto {
  id: Float
  name: String
}

"""Договор - ДКПЗ"""
input ExternalContractDtoInput {
  id: Float
  name: String
}

"""Первичный кредитор"""
type ExternalInitialCreditorDto {
  """Внешний ID"""
  id: Float

  """Название"""
  shortName: String
}

"""Первичный кредитор"""
input ExternalInitialCreditorDtoInput {
  """Внешний ID"""
  id: Float

  """Название"""
  shortName: String
}

"""Агент по сопровождению"""
type ExternalManagingAgentDto {
  id: Float
  name: String
}

"""Агент по сопровождению"""
input ExternalManagingAgentDtoInput {
  id: Float
  name: String
}

"""Кредитное дело"""
type ExternalMortgageDto {
  id: Float
  name: String

  """Продукт"""
  product: ExternalProductDto

  """Текущая процентная ставка"""
  interestPercent: Float

  """
  Наличие личного страхования@deprecated т.к. для расчета ставки
  рефинансирования беретсяMortgageApplicationDto.creditToPledge 27.03.2018
  """
  lifeInsurance: Boolean

  """Заёмщик"""
  borrower: ExternalBorrowerDto

  """
  Номер закладной, эквивалентен полю mortgageApplication.contract.pledgeNumber
  """
  mortgageNo: String

  """
  Номер кредитного договора, эквивалентен полю mortgageApplication.contract.contractNumber
  """
  contractNumber: String

  """Первичный кредитор"""
  initialCreditor: ExternalInitialCreditorDto

  """
  Коэффициент К/З,%@deprecated т.к. для расчета ставки рефинансирования
  беретсяMortgageApplicationDto.creditToPledge 27.03.2018
  """
  creditToPledge: Float

  """Дата выдачи"""
  issueDate: Any

  """Регион"""
  region: ExternalRegionDto

  """
  Технология выдачи@deprecated т.к. для расчета ставки рефинансирования берется MortgageApplicationDto.issueTech27.03.2018
  """
  issueTech: String!
}

"""Кредитное дело"""
input ExternalMortgageDtoInput {
  id: Float
  name: String

  """Продукт"""
  product: ExternalProductDtoInput

  """Текущая процентная ставка"""
  interestPercent: Float

  """
  Наличие личного страхования@deprecated т.к. для расчета ставки
  рефинансирования беретсяMortgageApplicationDto.creditToPledge 27.03.2018
  """
  lifeInsurance: Boolean

  """Заёмщик"""
  borrower: ExternalBorrowerDtoInput

  """
  Номер закладной, эквивалентен полю mortgageApplication.contract.pledgeNumber
  """
  mortgageNo: String

  """
  Номер кредитного договора, эквивалентен полю mortgageApplication.contract.contractNumber
  """
  contractNumber: String

  """Первичный кредитор"""
  initialCreditor: ExternalInitialCreditorDtoInput

  """
  Коэффициент К/З,%@deprecated т.к. для расчета ставки рефинансирования
  беретсяMortgageApplicationDto.creditToPledge 27.03.2018
  """
  creditToPledge: Float

  """Дата выдачи"""
  issueDate: Any

  """Регион"""
  region: ExternalRegionDtoInput

  """
  Технология выдачи@deprecated т.к. для расчета ставки рефинансирования берется MortgageApplicationDto.issueTech27.03.2018
  """
  issueTech: String!
}

"""Хранитель закладной"""
type ExternalMortgageKeeperDto {
  id: Float
  name: String
}

"""Хранитель закладной"""
input ExternalMortgageKeeperDtoInput {
  id: Float
  name: String
}

"""Партнёр"""
type ExternalPartnerDto {
  id: Float
  name: String
}

"""Партнёр"""
input ExternalPartnerDtoInput {
  id: Float
  name: String
}

"""Продукт"""
type ExternalProductDto {
  id: Float
  name: String
}

"""Продукт"""
input ExternalProductDtoInput {
  id: Float
  name: String
}

"""Регион"""
type ExternalRegionDto {
  id: Float
  code: String
  referenceType: String
  name: String
  REFERENCE_TYPE: String
}

"""Регион"""
input ExternalRegionDtoInput {
  id: Float
  code: String
  referenceType: String
  name: String
  REFERENCE_TYPE: String
}

input FindAllQueryCommonRefinancingCreditInterplayInput {
  arg0: Any!
}

input FindAllQueryCommonRefinancingDealInterplayInput {
  arg0: Any!
}

input FindAllQueryCommonRefinancingOfferInterplayInput {
  arg0: Any!
}

input FindAllQueryInput {
  requestParams: Any!
}

type FloorMaterialTypeDto {
  code: String
  name: String
}

type FoundationMaterialTypeDto {
  code: String
  name: String
}

input GenerateActParamsInput {
  """ИД сделки"""
  dealId: Float!
}

input GetByMortgageNumberParamsInput {
  """ИД кредитного дела из mortgage-service"""
  id: Float!
}

input GetParamsCommonRefinancingCreditInterplayInput {
  id: Float!
}

input GetParamsCommonRefinancingDealInterplayInput {
  id: Float!
}

input GetParamsCommonRefinancingDealStateInterplayInput {
  id: Float!
}

input GetParamsCommonRefinancingOfferInterplayInput {
  id: Float!
}

input GetParamsInput {
  id: Float!
}

input GetRefinancingCreditParamsCommonRefinancingOfferCreditInterplayInput {
  """ID предложения"""
  offerId: Float!

  """ID закладной"""
  id: Float!
}

input GetRefinancingCreditParamsInput {
  """ID сделки"""
  dealId: Float!

  """ID закладной"""
  id: Float!
}

input GetRefinancingCreditsPartnerWithPagingQueryInput {
  """Фильтр"""
  query: String!

  """Направление сортировки (asc/desc)"""
  d: String!

  """Номер страницы"""
  p: Float!

  """Поле, по которому происходит сортировка (id/borrower)"""
  s: String!

  """Количество закладных на странице"""
  l: Float!

  """Статусы закладных"""
  status: [RefinancingCreditStatusCommon]!
}

input GetRefinancingCreditsWithPagingParamsCommonRefinancingOfferCreditInterplayInput {
  """ID предложения"""
  offerId: Float!
}

input GetRefinancingCreditsWithPagingParamsInput {
  """ID сделки"""
  dealId: Float!
}

input GetRefinancingCreditsWithPagingQueryCommonRefinancingOfferCreditInterplayInput {
  """Номер страницы"""
  p: Float!

  """Количество закладных на странице"""
  l: Float!
}

input GetRefinancingCreditsWithPagingQueryInput {
  """Номер страницы"""
  p: Float!

  """Количество закладных на странице"""
  l: Float!
}

input GetRefinancingDealsPartnerWithPagingQueryInput {
  """Фильтр"""
  query: String!

  """Направление сортировки (asc/desc)"""
  d: String!

  """Номер страницы"""
  p: Float!

  """
  Поле, по которому происходит сортировка (id/dealDate/endDealDate/dealValue)
  """
  s: String!

  """Количество сделок на странице"""
  l: Float!

  """Статусы сделок"""
  status: [RefinancingDealStatusCommon]!
}

input GetStateParamsCommonRefinancingOfferDealInterplayInput {
  """ID КД в mortgage-service"""
  id: Float!
}

input GetStateParamsInput {
  id: Float!
}

input GetStatisticQueryInput {
  """Фильтр"""
  query: String!
}

enum GrantorRole {
  BUYER
  SELLER
}

type HistoryTaskDto {
  owner: String
  duration: Float
  followUp: String
  due: String
  name: String
  description: String
  startTime: String
  detailView: Boolean
  id: String
  assignee: String
  endTime: String
  priority: Float
}

type HttpEntity_Any {
  headers: HttpHeaders
  body: Any
  EMPTY: HttpEntity_Any
}

type HttpHeaders {
  CONTENT_LANGUAGE: String
  HOST: String
  IF_MODIFIED_SINCE: String
  FROM: String
  CACHE_CONTROL: String
  CONTENT_RANGE: String
  IF_RANGE: String
  CONTENT_TYPE: String
  PRAGMA: String
  VARY: String
  ALLOW: String
  IF_MATCH: String
  ACCEPT_ENCODING: String
  CONTENT_LOCATION: String
  TRANSFER_ENCODING: String
  USER_AGENT: String
  ACCEPT_RANGES: String
  ACCESS_CONTROL_ALLOW_HEADERS: String
  ACCESS_CONTROL_ALLOW_ORIGIN: String
  WARNING: String
  IF_NONE_MATCH: String
  GMT: Any
  DATE: String
  ACCEPT: String
  CONTENT_LENGTH: String
  ETAG: String
  COOKIE: String
  RETRY_AFTER: String
  TRAILER: String
  ETAG_HEADER_VALUE_PATTERN: Any
  RANGE: String
  LOCATION: String
  CONTENT_DISPOSITION: String
  IF_UNMODIFIED_SINCE: String
  LAST_MODIFIED: String
  WWW_AUTHENTICATE: String
  ACCESS_CONTROL_ALLOW_CREDENTIALS: String
  serialVersionUID: Float
  ORIGIN: String
  SET_COOKIE2: String
  ACCESS_CONTROL_MAX_AGE: String
  EXPIRES: String
  SERVER: String
  LINK: String
  CONTENT_ENCODING: String
  AGE: String
  headers: Any
  EXPECT: String
  ACCESS_CONTROL_REQUEST_METHOD: String
  SET_COOKIE: String
  DATE_FORMATS: [String]
  PROXY_AUTHORIZATION: String
  VIA: String
  ACCESS_CONTROL_REQUEST_HEADERS: String
  CONNECTION: String
  MAX_FORWARDS: String
  TE: String
  ACCEPT_LANGUAGE: String
  REFERER: String
  ACCEPT_CHARSET: String
  ACCESS_CONTROL_ALLOW_METHODS: String
  UPGRADE: String
  PROXY_AUTHENTICATE: String
  ACCESS_CONTROL_EXPOSE_HEADERS: String
  AUTHORIZATION: String
  location: Any
  accessControlRequestMethod: HttpMethod
  ifNoneMatch: [String]
  acceptCharset: [String]
  eTag: String
  first: String
  range: [HttpRange]
  pragma: String
  firstDate: Float
  ifModifiedSince: Float
  accessControlAllowMethods: [HttpMethod]
  accessControlAllowHeaders: [String]
  contentLength: Float
  accessControlAllowCredentials: Boolean
  ifUnmodifiedSince: Float
  vary: [String]
  allow: [HttpMethod]
  cacheControl: String
  contentType: MediaType
  expires: Float
  accept: [MediaType]
  accessControlAllowOrigin: String
  lastModified: Float
  ifMatch: [String]
  valuesAsList: [String]
  connection: [String]
  accessControlExposeHeaders: [String]
  accessControlMaxAge: Float
  date: Float
  upgrade: String
  origin: String
  empty: Boolean
  accessControlRequestHeaders: [String]
}

enum HttpMethod {
  TRACE
  HEAD
  DELETE
  POST
  GET
  OPTIONS
  PUT
  PATCH
}

type HttpRange {
  BYTE_RANGE_PREFIX: String
  rangeEnd: Float
  rangeStart: Float
}

enum HttpStatus {
  REQUEST_TIMEOUT
  INSUFFICIENT_SPACE_ON_RESOURCE
  USE_PROXY
  UNPROCESSABLE_ENTITY
  PROCESSING
  TEMPORARY_REDIRECT
  NOT_EXTENDED
  MOVED_TEMPORARILY
  PAYLOAD_TOO_LARGE
  VARIANT_ALSO_NEGOTIATES
  FAILED_DEPENDENCY
  ACCEPTED
  BAD_GATEWAY
  URI_TOO_LONG
  IM_USED
  NOT_ACCEPTABLE
  RESET_CONTENT
  PARTIAL_CONTENT
  GATEWAY_TIMEOUT
  DESTINATION_LOCKED
  FOUND
  METHOD_FAILURE
  METHOD_NOT_ALLOWED
  EXPECTATION_FAILED
  LOCKED
  NOT_FOUND
  PERMANENT_REDIRECT
  LENGTH_REQUIRED
  BANDWIDTH_LIMIT_EXCEEDED
  MULTIPLE_CHOICES
  REQUEST_ENTITY_TOO_LARGE
  NETWORK_AUTHENTICATION_REQUIRED
  SWITCHING_PROTOCOLS
  GONE
  UPGRADE_REQUIRED
  UNAVAILABLE_FOR_LEGAL_REASONS
  TOO_MANY_REQUESTS
  INTERNAL_SERVER_ERROR
  CONFLICT
  INSUFFICIENT_STORAGE
  HTTP_VERSION_NOT_SUPPORTED
  UNSUPPORTED_MEDIA_TYPE
  NO_CONTENT
  PROXY_AUTHENTICATION_REQUIRED
  REQUEST_HEADER_FIELDS_TOO_LARGE
  PAYMENT_REQUIRED
  CREATED
  MOVED_PERMANENTLY
  UNAUTHORIZED
  REQUEST_URI_TOO_LONG
  OK
  REQUESTED_RANGE_NOT_SATISFIABLE
  BAD_REQUEST
  SEE_OTHER
  FORBIDDEN
  CONTINUE
  PRECONDITION_REQUIRED
  NOT_MODIFIED
  NOT_IMPLEMENTED
  I_AM_A_TEAPOT
  ALREADY_REPORTED
  NON_AUTHORITATIVE_INFORMATION
  PRECONDITION_FAILED
  LOOP_DETECTED
  CHECKPOINT
  SERVICE_UNAVAILABLE
  MULTI_STATUS
}

"""Договор страхования"""
type InsuranceAgreementDto {
  id: Float
  version: Float

  """Тип документа о страховании"""
  insuranceDoc: InsuranceDocType

  """Дата окончания действия"""
  endContractDate: Any
  paymentSchedules: [InsurancePaymentScheduleDto]

  """Выплата разницы возмещения"""
  excessIndemnityToBorrower: Boolean

  """Номер договора"""
  contractNumber: String
  insuranceTypes: [InsuranceTypeInMADto]

  """Дата заключения договора"""
  signDate: Any

  """Выгодоприобретатель"""
  beneficiary: PartnerDto
  insurerPartners: [InsurerPartnerDto]

  """Дата начала действия"""
  startContractDate: Any

  """ID договора страхования в Новой Афине"""
  insuranceContractExtId: Float
  insurerPeople: [InsurerPersonDto]
  mortgageInsuranceDocs: [DocumentDto]

  """Страховая компания"""
  insuranceCompany: PartnerDto
  insuredPeople: [InsuredPersonDto]
}

enum InsuranceDocType {
  POLICY
  AGREEMENT
}

"""Стаховой платеж"""
type InsurancePaymentDto {
  id: Float
  version: Float

  """Начало периода"""
  periodStartDate: Any

  """Плановая дата"""
  plannedDate: Any

  """Плановая сумма"""
  plannedSum: Float

  """Сумма ИС"""
  plannedSumForProperty: Float

  """Дата факт. платежа"""
  actualDate: Any

  """Фактическая сумма"""
  actualSum: Float

  """Окончание периода"""
  periodEndDate: Any

  """Страховая сумма"""
  insurancePayment: Float
}

"""График страховых платежей"""
type InsurancePaymentScheduleDto {
  id: Float
  version: Float

  """Записи графика"""
  insurancePayments: [InsurancePaymentDto]
}

enum InsuranceType {
  MORTGAGEDPROPERTY
  MULTIPURPOSE
  OWNERSHIP
  LIFE
}

"""Вид страхования"""
type InsuranceTypeInMADto {
  id: Float
  version: Float

  """Страховая сумма"""
  insuranceAmount: Float

  """Страховая премия"""
  bonus: Float

  """Тариф"""
  tariff: Float

  """Вид страхования"""
  type: InsuranceType
}

"""Застрахованное лицо"""
type InsuredPersonDto {
  id: Float
  version: Float

  """Страховое возмещение, руб."""
  insurance: Float

  """Идентификатор застрахованного лицаId from applicant"""
  insuredPersonId: Float

  """Процент от общей суммы"""
  indemnityPercent: Float
}

"""Страхователь - партнер"""
type InsurerPartnerDto {
  id: Float
  version: Float

  """Идентификатор страхователя"""
  insurer: PartnerDto
}

"""Страхователь - физическое лицо"""
type InsurerPersonDto {
  id: Float
  version: Float

  """Идентификатор страхователяСсылка на applicant"""
  insurerId: Float
}

enum IssueTech {
  ROSCAP_BALANCE
  PARTNER_BALANCE
}

type LatestStubbed {
  date: Any
  dealId: Float
}

type MediaType {
  serialVersionUID: Float
  subtype: String
  WILDCARD_TYPE: String
  PARAM_CHARSET: String
  type: String
  TOKEN: Any
  parameters: Any
  wildcardType: Boolean
  charset: String
  charSet: String
  compatibleWith: Boolean
  concrete: Boolean
  wildcardSubtype: Boolean
  parameter: String
  TEXT_HTML: MediaType
  ALL: MediaType
  TEXT_EVENT_STREAM: MediaType
  TEXT_XML: MediaType
  IMAGE_JPEG: MediaType
  SPECIFICITY_COMPARATOR: Any
  APPLICATION_RSS_XML: MediaType
  TEXT_PLAIN_VALUE: String
  APPLICATION_ATOM_XML_VALUE: String
  APPLICATION_PDF: MediaType
  IMAGE_PNG: MediaType
  MULTIPART_FORM_DATA: MediaType
  IMAGE_PNG_VALUE: String
  TEXT_MARKDOWN: MediaType
  ALL_VALUE: String
  APPLICATION_JSON_VALUE: String
  APPLICATION_PDF_VALUE: String
  APPLICATION_RSS_XML_VALUE: String
  TEXT_MARKDOWN_VALUE: String
  IMAGE_JPEG_VALUE: String
  APPLICATION_FORM_URLENCODED_VALUE: String
  IMAGE_GIF_VALUE: String
  TEXT_EVENT_STREAM_VALUE: String
  APPLICATION_ATOM_XML: MediaType
  QUALITY_VALUE_COMPARATOR: Any
  APPLICATION_OCTET_STREAM_VALUE: String
  APPLICATION_JSON_UTF8_VALUE: String
  APPLICATION_OCTET_STREAM: MediaType
  APPLICATION_XHTML_XML_VALUE: String
  TEXT_HTML_VALUE: String
  APPLICATION_FORM_URLENCODED: MediaType
  APPLICATION_JSON: MediaType
  PARAM_QUALITY_FACTOR: String
  IMAGE_GIF: MediaType
  TEXT_XML_VALUE: String
  APPLICATION_JSON_UTF8: MediaType
  APPLICATION_XHTML_XML: MediaType
  APPLICATION_XML_VALUE: String
  APPLICATION_XML: MediaType
  MULTIPART_FORM_DATA_VALUE: String
  TEXT_PLAIN: MediaType
  qualityValue: Float
}

""" TODO missed fields: сreditContractNo (note: that this is [rus эс]reditContractNo)
"""
type MortgageApplicationDto {
  id: Float
  version: Float

  """№ заявки в ИСУР"""
  sourceId: String

  """Первоначальный взнос"""
  initialPayment: Float

  """Семейная ипотека: Срок льготного периода"""
  preferentialPeriod: Float

  """Цель кредита"""
  creditPurpose: CreditPurposeDto

  """Госрегистрация ипотеки в ЕГРП"""
  egrpReg: EgrpRegistrationDto

  """Физ. лица в КД"""
  applicants: [ApplicantDto]

  """Первичный кредитор"""
  initialCreditor: PartnerDto

  """Дескриптор"""
  descriptor: String

  """Технология выдачи"""
  issueTech: IssueTech

  """Ответственный сотрудник"""
  employee: EmployeeDto
  options: [OptionDto]
  mortgageRegistrationDocs: [DocumentDto]

  """Лид"""
  leadId: Float
  rateRebates: [RateRebateTypeDto]

  """Срок кредита, мес."""
  period: Float

  """Ставка по кредиту, %"""
  interestPercent: Float

  """Кредитный продукт"""
  creditProduct: CreditProductDto
  contract: MortgageContractDto
  procuracies: [ProcuracyDto]

  """Коэффициент К/З, %"""
  creditToPledge: Float

  """Округление платежа"""
  roundingOff: PaymentRoundingRuleType
  mortgageSignedDocs: [DocumentDto]

  """ TODO: #validator спринговый адаптер не может распарсить корректно violation для элемента коллекции AHMLAPXD-18595
  """
  birthDates: [Any]

  """Наличие личного страхования"""
  lifeInsurance: Boolean
  approvedParams: [ApprovedParamsDto]

  """Полная стоимость кредита, %"""
  fullCreditValue: Float

  """Способ оплаты"""
  paymentMethod: PaymentMethod

  """Идентификатор кредитного договора в НА"""
  mortgageContractExtId: Float
  mortgageDocs: [DocumentDto]

  """Регион приобретения"""
  region: RegionDto

  """Объекты недвижимости - realtyObjects"""
  items: [RealtyObjectDto]

  """Статус"""
  status: Status

  """График плановых платежей"""
  paymentSchedules: [PaymentScheduleDto]

  """Залог имеющегося жилья"""
  pledgeOfPurchaseObject: Boolean
  serialVersionUID: Float

  """Дата сделки"""
  dealDate: Any

  """ФИО Основного заемщика в нижнем регистре"""
  mainBorrowerFullNameLowerCase: String
  mortgagePrintedDocs: [DocumentDto]
  documentTransfers: [DocumentTransferDto]

  """Сумма кредита, руб."""
  amount: Float

  """Комментарии"""
  comments: String

  """Стоимость имеющегося жилья, руб."""
  existingHousingValue: Float

  """Перекредитование"""
  onLending: OnLendingDto

  """Реквизиты получателя"""
  requisite: RequisiteDto

  """Владелец закладной"""
  pledgeOwner: PartnerDto

  """Партнер"""
  partner: PartnerDto
  insuranceAgreements: [InsuranceAgreementDto]

  """Договор залога"""
  pledge: MortgagePledgeDto

  """Статус рефинансирования"""
  refinanceStatus: RefinanceStatus
}

type MortgageCoefficientTypeCommonCommon {
  """
  Path: /refinancing/mortgagecoefficienttype/
  
  """
  findAll: [EnumDto]
}

"""Кредитный договор и Закладная"""
type MortgageContractDto {
  """Подписант"""
  creditSignerID: Float

  """Расходы на выдачу"""
  issueExpenses: [MortgageIssueExpenseDto]

  """Номер закладной"""
  pledgeNumber: String

  """Номер договора"""
  contractNumber: String

  """Дата выдачи"""
  issueDate: Any

  """Дата выдачи закладной"""
  pledgeIssueDate: Any

  """Зарегистрирован в ЕГРН"""
  realEstateRegistry: Boolean
}

type MortgageIssueExpenseDto {
  id: Float
  version: Float
  originationFeeType: ExpenseTypeDto
  originationFeeAmount: Float
}

"""Договор залога"""
type MortgagePledgeDto {
  """Номер договора залога"""
  pledgeContractNumber: String

  """ID договора залога в Новой Афине"""
  pledgeContractExtId: Float

  """ID закладной в Новой Афине"""
  pledgeExtId: Float
}

input MortgageSearchQueryInput {
  """Строка поиска"""
  s: String!
}

type Mutation {
  CommonMutation: CommonMutation
}

type NewAthenaStubCommon {
  """
  Path: /refinancing/stub/athena/
  Получение информации о состоянии заглушки: вклвыкл, аудит и обработанные сделки.
  """
  getEnabled: Stat
}

type NewAthenaStubMutationCommon {
  """
  Path: /refinancing/stub/athena/{enabled}
  Включить или выключить заглушку вызова Новой Афины
  """
  setEnabled(params: SetEnabledParamsCommonNewAthenaStubMutationInterplayInput!): String
}

enum NullHandling {
  NATIVE
  NULLS_FIRST
  NULLS_LAST
}

enum ObjectStatus {
  CANCELLED
  UNDERWRITING
  RECOMMENDED
  PROCESSING
  WAITING
  MEETING
  APPROVED
}

"""Перекредитование"""
type OnLendingDto {
  id: Float
  version: Float

  """Дата первоначального договора"""
  pastContractDate: Any

  """Наименование организации"""
  pastContractOrgName: PartnerDto
  serialVersionUID: Float

  """Тип организации"""
  pastContractOrgType: PastContractOrgType

  """Цель кредита"""
  pastMortgagePurpose: CreditPurposeDto

  """Номер первоначального договора"""
  pastContractNo: String

  """Последующая ипотека"""
  subsequentMortgage: Boolean
}

type OptionDto {
  code: String
  name: String
  id: Float!
}

type Order {
  serialVersionUID: Float
  nullHandling: NullHandling
  ignoreCase: Boolean
  property: String
  DEFAULT_IGNORE_CASE: Boolean
  direction: Direction
  descending: Boolean
  ascending: Boolean
}

enum Ownership {
  SHARED_PROPERTY
  PROPERTY
  COMMON_PROPERTY
}

type Page_RefinancingCreditDto {
  last: Boolean
  content: [RefinancingCreditDto]
  number: Float
  sort: Sort
  first: Boolean
  size: Float
  numberOfElements: Float
  totalElements: Float
  totalPages: Float
}

type Page_RefinancingDealDto {
  last: Boolean
  content: [RefinancingDealDto]
  number: Float
  sort: Sort
  first: Boolean
  size: Float
  numberOfElements: Float
  totalElements: Float
  totalPages: Float
}

type PartnerDto {
  id: Float
  name: String

  """ Перекрыто поле label для синхронизации по названиям полей с другими сервисами и фронтом
  """
  shortName: String
}

type PassportDto {
  id: Float
  version: Float
  docSeries: String
  validDate: Any
  issuedBy: String
  docNo: String
  issueDate: Any
  issueUnit: String
}

enum PastContractOrgType {
  CREDIT
  NON_LENDING
}

enum PaymentMethod {
  DIRECT_ISSUE
  ON_LANDING
  ACCREDITIVE
  POST_REGISTRATION
}

enum PaymentRoundingRuleType {
  CLIENT_CHOICE
  TO_RUBLES
  UNDEFINED
  TO_COINS
}

"""График плановых платежей по КД"""
type PaymentScheduleDto {
  id: Float
  version: Float
  plannedPayments: [PlannedPaymentDto]
}

type Person {
  id: Float
  lastName: String
  middleNameDat: String
  descriptor: String
  firstNameAcc: String
  middleNameGen: String
  firstNameInstr: String
  birthPlace: String
  agreePersonalDataProcessing: Boolean
  children: [Child]
  firstNameDat: String
  middleNameAcc: String
  firstNamePrep: String
  firstNameGen: String
  comments: String
  middleNameBefore: String
  lastNameDat: String
  lastNameBefore: String
  sex: EnumDto!
  inn: String
  lastNamePrep: String
  birthDate: Any!
  lastNameAcc: String
  firstName: String
  firstNameBefore: String
  lastNameInstr: String
  middleName: String
  partnerId: Float
  middleNameInstr: String
  middleNamePrep: String
  snils: String
  lastNameGen: String
  nameChanged: Boolean
}

input PersonDescriptorInput {
  lastName: String
  firstName: String
  middleName: String
  birthDate: Any
}

input PersonInput {
  id: Float
  lastName: String
  middleNameDat: String
  descriptor: String
  firstNameAcc: String
  middleNameGen: String
  firstNameInstr: String
  birthPlace: String
  agreePersonalDataProcessing: Boolean
  children: [ChildInput]
  firstNameDat: String
  middleNameAcc: String
  firstNamePrep: String
  firstNameGen: String
  comments: String
  middleNameBefore: String
  lastNameDat: String
  lastNameBefore: String
  sex: EnumDtoInput!
  inn: String
  lastNamePrep: String
  birthDate: Any!
  lastNameAcc: String
  firstName: String
  firstNameBefore: String
  lastNameInstr: String
  middleName: String
  partnerId: Float
  middleNameInstr: String
  middleNamePrep: String
  snils: String
  lastNameGen: String
  nameChanged: Boolean
}

input PersonSearchInputInput {
  lastName: String
  inn: String
  fullName: String
  snils: String
}

type PersonServiceApiCommon {
  """
  Path: /person/
  
  """
  findAll(query: FindAllQueryInput): [Person]

  """
  Path: /person/{id}
  
  """
  get(params: GetParamsInput!): Person
}

type PersonServiceApiMutationCommon {
  """
  Path: /person/descriptorSearch
  
  """
  findByDescriptor(payload: PersonDescriptorInput!): Person

  """
  Path: /person/{id}
  
  """
  remove(params: RemoveParamsCommonPersonServiceApiMutationInterplayInput!): Any

  """
  Path: /person/
  
  """
  save(payload: PersonInput!): Person

  """
  Path: /person/search
  
  """
  search(payload: PersonSearchInputInput!): [Person]

  """
  Path: /person/{id}
  
  """
  update(params: UpdateParamsCommonPersonServiceApiMutationInterplayInput!, payload: PersonInput!): Person
}

"""Плановый платеж по КД"""
type PlannedPaymentDto {
  id: Float
  version: Float
  debtRemaining: Float

  """Ожидаемая задолженность на конец периода - Всего"""
  restAll: Float

  """Накоплено процентов за период"""
  accumulatedInt: Float

  """Погашение накопленных процентов"""
  accumulatedAmount: Float

  """Процентная ставка на период"""
  rate: Float

  """
  Ожидаемая задолженность на начало периода - Остаток накопленных процентов
  """
  inAccumulatedInt: Float

  """Начислено процентов за период"""
  calcInt: Float
  debtRepayment: Float

  """
  Ожидаемая задолженность на конец периода - Остаток накопленных процентов
  """
  restAccumulatedInt: Float

  """Количество дней в процентном периоде"""
  days: Float
  paymentTotal: Float
  paymentDate: Any

  """Ожидаемая задолженность на начало периода - Остаток основного долга"""
  inrestDolg: Float
  interestRepayment: Float
}

"""Доверенность"""
type ProcuracyDto {
  id: Float
  version: Float

  """Фамилия"""
  lastName: String

  """Доверители-продавцы"""
  grantorSellerPeople: [Float]

  """Доверенность оформлена на:"""
  grantorRole: GrantorRole

  """Фамилия в дательном падеже"""
  lastNameDat: String

  """Фамилия в предложном падеже"""
  lastNamePrep: String

  """Отчество в дательном падеже"""
  middleNameDat: String

  """Имя в винительном падеже"""
  firstNameAcc: String

  """Отчество в родительном падеже"""
  middleNameGen: String

  """Фамилия в винительном падеже"""
  lastNameAcc: String

  """Имя"""
  firstName: String

  """Имя в творительном падеже"""
  firstNameInstr: String

  """Номер доверенности"""
  number: String

  """Доверители-заявители"""
  grantorApplicants: [Float]

  """Дата выдачи"""
  procuracyDate: Any

  """Фамилия в творительном падеже"""
  lastNameInstr: String

  """Имя в дательном падеже"""
  firstNameDat: String

  """Отчество"""
  middleName: String

  """Отчество в винительном падеже"""
  middleNameAcc: String

  """Отчество в творительном падеже"""
  middleNameInstr: String

  """Отчество в предложном падеже"""
  middleNamePrep: String

  """Имя в предложном падеже"""
  firstNamePrep: String

  """Фамилия в родительном падеже"""
  lastNameGen: String

  """Имя в родительном падеже"""
  firstNameGen: String
}

type Query {
  Common: Common
}

type RateRebateTypeDto {
  code: String
  name: String
}

"""Объект недвижимости"""
type RealtyObjectDto {
  id: Float
  version: Float

  """Квартира"""
  apartmentNo: String

  """Тип номера"""
  registrationNoType: RegistrationNoType

  """Город в родительном падеже"""
  cityNameGen: String

  """Площадь кухни, кв. м."""
  kitchenArea: Float

  """Год постройки"""
  yearBuilt: Float

  """Этажность здания"""
  buildingStoreys: Float

  """Роль недвижимости в кредитном деле"""
  realtyObjectRole: RealtyObjectRole

  """Жилая площадь, кв. м."""
  livingArea: Float

  """Строение"""
  structureNo: String

  """Дата отчета"""
  reportDate: Any

  """Корпус"""
  buildingNo: String

  """Тип недвижимости"""
  realtyType: RealtyType

  """Дом"""
  houseNo: String

  """Идентификатор предмета залога в НА"""
  purchaseObjectExtId: Float

  """Номер отчета из системы Банк-оценщик"""
  reportNo: String

  """Отчество оценщика"""
  appraiserMiddleName: String

  """Участник ЖСК"""
  housingCooperative: Boolean

  """Количество комнат"""
  roomCount: Float

  """Аварийное состояние"""
  emergencyCondition: Boolean

  """Телефон"""
  sellerPhone: String

  """Индекс"""
  index: String

  """Стоимость согласно оценке, руб."""
  appraisalAmount: Float

  """ИНН компании"""
  sellerINN: String

  """Дата оценки"""
  appraisalDocDate: Any

  """Удостоверяющий документ"""
  contractOfPurchase: ContractOfPurchaseDto

  """Населенный пункт"""
  settlementName: String

  """Фамилия оценщика"""
  appraiserLastName: String

  """Подтвержденная рыночная стоимость, руб"""
  sellingAmount: Float

  """Фундамент"""
  foundationMaterialType: FoundationMaterialTypeDto

  """Капремонт с отселением"""
  overhaul: Boolean

  """Полный адрес"""
  fullAddress: String

  """Стоимость по договору, руб."""
  contractAmount: Float

  """Состояние"""
  conditionType: ConditionTypeDto

  """Регион"""
  region: RegionDto

  """Материал перекрытий"""
  floorMaterialType: FloorMaterialTypeDto

  """Идентификатор ОДС"""
  constructionObjectId: Float

  """Статус"""
  status: ObjectStatus

  """Номер отчета об оценке"""
  appraisalDocNo: String

  """Полное наименование юридического лица"""
  sellerName: String
  sellerPersons: [SellerPersonDto]

  """Адрес ФИАС"""
  isAddressFIAS: Boolean

  """Имя оценщика"""
  appraiserFirstName: String

  """Этаж квартиры"""
  apartmentFloor: Float

  """Город в предложном падеже"""
  cityNamePrep: String
  serialVersionUID: Float

  """Город в творительном падеже"""
  cityNameInstr: String

  """Улица"""
  streetName: String

  """Город"""
  cityName: String

  """Объект долевого строительства"""
  constructionObjectGuid: String

  """Город в винительном падеже"""
  cityNameAcc: String

  """Юридическое лицо"""
  sellerLegalEntity: Boolean

  """Оценщик"""
  appraiser: AppraiserDto

  """Идентификатор дома"""
  houseGuid: String

  """Общая площадь, кв. м."""
  floorArea: Float

  """Материал стен"""
  wallsMaterialType: WallsMaterialTypeDto

  """Район"""
  districtName: String

  """Адрес сайта"""
  sellerWebSite: String

  """Номер"""
  registrationNo: String

  """Доп. информация"""
  comment: String

  """Степень готовности - Строящееся"""
  isConstructionObject: Boolean

  """Город в дательном падеже"""
  cityNameDat: String

  """Идентификатор адресного объекта"""
  addressGuid: String
}

enum RealtyObjectRole {
  MORTGAGESUBJECT
  PURCHASEOBJECT
}

enum RealtyType {
  OTHER
  APARTMENT
  HOUSE
  ROOM
}

enum RefinanceStatus {
  REFINANCING
  NOT_REFINANCING
}

type RefinancingCreditCommon {
  """
  Path: /refinancing/credit/{id}/coefficient
  Отправка запроса по закладной в evaluation-service для вызова алгоритма
  расчёта коэффициентов изменения стоимости закладных по данным ДКПЗ
  """
  evaluateRefinancingCreditCreditCoefficient(params: EvaluateRefinancingCreditCreditCoefficientParamsInput!): [RefinancingMortgageCoefficientDto]

  """
  Path: /refinancing/credit/
  
  """
  findAll(query: FindAllQueryCommonRefinancingCreditInterplayInput): [RefinancingCreditDto]

  """
  Path: /refinancing/credit/{id}
  
  """
  get(params: GetParamsCommonRefinancingCreditInterplayInput!): RefinancingCreditDto

  """
  Path: /refinancing/credit/mortgage/{id}
  Получение всех предложений и сделок по идентификатору КД из mortgage-service.
  Ограничение по принадлежности к партнеру текущего пользователя.
  """
  getByMortgageNumber(params: GetByMortgageNumberParamsInput!): RefinancingMortgageDto

  """
  Path: /refinancing/credit/new
  
  """
  getNew: String

  """
  Path: /refinancing/credit/currentuser
  Получение списка закладных текущего пользователя с фильтрацией по запросу и с использованием пейджинга
  """
  getRefinancingCreditsPartnerWithPaging(query: GetRefinancingCreditsPartnerWithPagingQueryInput): Page_RefinancingCreditDto

  """
  Path: /refinancing/credit/currentuser/statusstatistic
  Получение статистики по статусам закладных для текущего пользователя с фильтрацией по запросу
  """
  getStatistic(query: GetStatisticQueryInput): [RefinancingCreditStatusStatisticDto]
}

"""КД для рефинансирования"""
type RefinancingCreditDto {
  id: Float

  """Предложение по рефинансированию"""
  refinancingOffer: RefinancingOfferDto

  """Ценовые параметры - Сделка"""
  refinancingPriceParameterDeal: RefinancingPriceParameterDto

  """Ценовые параметры - Предложение"""
  refinancingPriceParameterOffer: RefinancingPriceParameterDto

  """Дата будущей сделки"""
  futureDealDate: Any

  """Номер сделки"""
  dealNo: Float

  """Дата создания КД для рефинансирования"""
  creditDate: Any

  """Цена закладной для сделки"""
  creditDealValue: Float

  """Статус КД для рефинансирования"""
  refinancingCreditStatus: RefinancingCreditStatusDto

  """Номер предложения"""
  offerNo: Float

  """Проведён андеррайтинг?"""
  isUnderwriting: Boolean

  """Внешняя ссылка на кредитное дело (КД)"""
  mortgage: ExternalMortgageDto!

  """Цена закладной для предложения"""
  creditOfferValue: Float

  """Сделка по рефинансированию"""
  refinancingDeal: RefinancingDealDto

  """Номер закладной"""
  creditNo: Float
}

"""КД для рефинансирования"""
input RefinancingCreditDtoInput {
  id: Float

  """Предложение по рефинансированию"""
  refinancingOffer: RefinancingOfferDtoInput

  """Ценовые параметры - Сделка"""
  refinancingPriceParameterDeal: RefinancingPriceParameterDtoInput

  """Ценовые параметры - Предложение"""
  refinancingPriceParameterOffer: RefinancingPriceParameterDtoInput

  """Дата будущей сделки"""
  futureDealDate: Any

  """Номер сделки"""
  dealNo: Float

  """Дата создания КД для рефинансирования"""
  creditDate: Any

  """Цена закладной для сделки"""
  creditDealValue: Float

  """Статус КД для рефинансирования"""
  refinancingCreditStatus: RefinancingCreditStatusDtoInput

  """Номер предложения"""
  offerNo: Float

  """Проведён андеррайтинг?"""
  isUnderwriting: Boolean

  """Внешняя ссылка на кредитное дело (КД)"""
  mortgage: ExternalMortgageDtoInput!

  """Цена закладной для предложения"""
  creditOfferValue: Float

  """Сделка по рефинансированию"""
  refinancingDeal: RefinancingDealDtoInput

  """Номер закладной"""
  creditNo: Float
}

type RefinancingCreditMutationCommon {
  """
  Path: /refinancing/credit/search
  Поиск закладных
  """
  creditSearchForDeals(payload: [Float]!): [RefinancingCreditDto]

  """
  Path: /refinancing/credit/{id}
  
  """
  remove(params: RemoveParamsCommonRefinancingCreditMutationInterplayInput!): Any

  """
  Path: /refinancing/credit/
  
  """
  save(payload: RefinancingCreditDtoInput!): RefinancingCreditDto

  """
  Path: /refinancing/credit/{id}
  
  """
  update(params: UpdateParamsCommonRefinancingCreditMutationInterplayInput!, payload: RefinancingCreditDtoInput!): RefinancingCreditDto

  """
  Path: /refinancing/credit/{id}/status
  Изменить статус закладной
  """
  updateStatus(params: UpdateStatusParamsCommonRefinancingCreditMutationInterplayInput!, payload: String!): RefinancingCreditDto

  """
  Path: /refinancing/credit/status/deal_preparing
  Изменить статус закладных на 'Цена подтверждена'
  """
  updateStatusDealPreparing(payload: [RefinancingCreditDtoInput]!): ResponseWithErrorDto

  """
  Path: /refinancing/credit/status/offer_preparing
  Изменить статус закладных на 'Присвоен 1 класс'
  """
  updateStatusOfferPreparing(payload: [RefinancingCreditDtoInput]!): ResponseWithErrorDto
}

enum RefinancingCreditStatusCommon {
  OFFER_PREPARING
  WAITING
  QUALIFIED
  DEAL_PREPARING
  CONFIRM
  REJECTED
}

type RefinancingCreditStatusCommonCommon {
  """
  Path: /refinancing/creditstatus/
  
  """
  findAll: [EnumDto]
}

type RefinancingCreditStatusDto {
  code: String
  name: String
  isDeal: Boolean
}

input RefinancingCreditStatusDtoInput {
  code: String
  name: String
  isDeal: Boolean
}

"""Статистика по статусам сделок"""
type RefinancingCreditStatusStatisticDto {
  """Статус КД для рефинансирования"""
  refinancingCreditStatus: RefinancingCreditStatusDto

  """Количество КД в статусе"""
  count: Float
}

type RefinancingDealCommon {
  """
  Path: /refinancing/deal/
  
  """
  findAll(query: FindAllQueryCommonRefinancingDealInterplayInput): [RefinancingDealDto]

  """
  Path: /refinancing/deal/{id}
  
  """
  get(params: GetParamsCommonRefinancingDealInterplayInput!): RefinancingDealDto

  """
  Path: /refinancing/deal/new
  
  """
  getNew: String

  """
  Path: /refinancing/deal/currentuser
  Получение списка сделок текущего пользователя с фильтрацией по запросу и с использованием пейджинга
  """
  getRefinancingDealsPartnerWithPaging(query: GetRefinancingDealsPartnerWithPagingQueryInput): Page_RefinancingDealDto

  """
  Path: /refinancing/deal/currentuser/statusstatistic
  Получение статистики по статусам сделок для текущего пользователя с группировкой по статусу
  """
  getStatistic: [RefinancingDealStatusStatisticDto]
}

type RefinancingDealCreditCommon {
  """
  Path: /refinancing/deal/{dealId}/credit/{id}
  Получение закладной
  """
  getRefinancingCredit(params: GetRefinancingCreditParamsInput!): RefinancingCreditDto

  """
  Path: /refinancing/deal/{dealId}/credit/
  Получение списка закладных с использованием пейджинга
  """
  getRefinancingCreditsWithPaging(query: GetRefinancingCreditsWithPagingQueryInput, params: GetRefinancingCreditsWithPagingParamsInput!): Page_RefinancingCreditDto
}

type RefinancingDealCreditMutationCommon {
  """
  Path: /refinancing/deal/{dealId}/credit/{id}
  Обновление закладной
  """
  updateRefinancingCredit(params: UpdateRefinancingCreditParamsCommonRefinancingDealCreditMutationInterplayInput!, payload: RefinancingCreditDtoInput!): ResponseEntity_RefinancingCreditDto
}

"""Сделка по рефинансированию"""
type RefinancingDealDto {
  id: Float

  """Тип сделки"""
  dealType: EnumDto

  """Партнёр - Покупатель"""
  buyer: ExternalPartnerDto

  """Сумма сделки"""
  dealValue: Float

  """ДКПЗ - Договор купли-продажи закладных"""
  refinancingContract: ExternalContractDto!

  """Синхронизирована?"""
  isSynchronized: Boolean

  """Агент по сопровождению"""
  managingAgent: ExternalManagingAgentDto

  """Документы"""
  refinancingDocuments: [RefinancingDocumentDto]

  """Статус процесса рассчета цены."""
  priceCalculationStatus: EnumDto

  """Номер сделки"""
  dealNo: Float

  """Тип рефинансирования"""
  refinancingType: EnumDto!

  """Партнёр - Продавец"""
  seller: ExternalPartnerDto

  """КД для рефинансирования"""
  refinancingCredits: [RefinancingCreditDto]

  """Время последнего запуска процесса рассчета цены."""
  priceCalculationStartTime: Any

  """Хранитель закладной"""
  mortgageKeeper: ExternalMortgageKeeperDto

  """Дата совершения сделки"""
  endDealDate: Any

  """Дата сделки (дата последних изменений)"""
  dealDate: Any

  """Остаток по лимиту."""
  limitRemainder: Float

  """Статус сделки"""
  dealStatus: EnumDto
}

"""Сделка по рефинансированию"""
input RefinancingDealDtoInput {
  id: Float

  """Тип сделки"""
  dealType: EnumDtoInput

  """Партнёр - Покупатель"""
  buyer: ExternalPartnerDtoInput

  """Сумма сделки"""
  dealValue: Float

  """ДКПЗ - Договор купли-продажи закладных"""
  refinancingContract: ExternalContractDtoInput!

  """Синхронизирована?"""
  isSynchronized: Boolean

  """Агент по сопровождению"""
  managingAgent: ExternalManagingAgentDtoInput

  """Документы"""
  refinancingDocuments: [RefinancingDocumentDtoInput]

  """Статус процесса рассчета цены."""
  priceCalculationStatus: EnumDtoInput

  """Номер сделки"""
  dealNo: Float

  """Тип рефинансирования"""
  refinancingType: EnumDtoInput!

  """Партнёр - Продавец"""
  seller: ExternalPartnerDtoInput

  """КД для рефинансирования"""
  refinancingCredits: [RefinancingCreditDtoInput]

  """Время последнего запуска процесса рассчета цены."""
  priceCalculationStartTime: Any

  """Хранитель закладной"""
  mortgageKeeper: ExternalMortgageKeeperDtoInput

  """Дата совершения сделки"""
  endDealDate: Any

  """Дата сделки (дата последних изменений)"""
  dealDate: Any

  """Остаток по лимиту."""
  limitRemainder: Float

  """Статус сделки"""
  dealStatus: EnumDtoInput
}

type RefinancingDealMutationCommon {
  """
  Path: /refinancing/deal/{id}/startcalculation
  Отправка сделки на расчет стоимости закладных
  """
  calculateDealController(params: CalculateDealControllerParamsCommonRefinancingDealMutationInterplayInput!): RefinancingDealDto

  """
  Path: /refinancing/deal/{id}/changecreditsstatus
  Изменить статус закладных сделки
  """
  changeCreditsStatus(params: ChangeCreditsStatusParamsCommonRefinancingDealMutationInterplayInput!, payload: String!): RefinancingDealDto

  """
  Path: /refinancing/deal/{id}/changestatus
  Изменить статус сделки
  """
  changeStatus(params: ChangeStatusParamsCommonRefinancingDealMutationInterplayInput!, payload: String!): RefinancingDealDto

  """
  Path: /refinancing/deal/{id}/action
  
  """
  remove(params: RemoveParamsCommonRefinancingDealMutationInterplayInput!, payload: String!): Any

  """
  Path: /refinancing/deal/
  
  """
  save(payload: RefinancingDealDtoInput!): RefinancingDealDto

  """
  Path: /refinancing/deal/{id}
  
  """
  update(params: UpdateParamsCommonRefinancingDealMutationInterplayInput!, payload: RefinancingDealDtoInput!): RefinancingDealDto

  """
  Path: /refinancing/deal/{id}/document
  Обновление документов сделки
  """
  updateRefinancingDocuments(params: UpdateRefinancingDocumentsParamsCommonRefinancingDealMutationInterplayInput!, payload: [RefinancingDocumentDtoInput]!): [RefinancingDocumentDto]

  """
  Path: /refinancing/deal/{id}/validation
  
  """
  validate(params: ValidateParamsCommonRefinancingDealMutationInterplayInput!, payload: String!): ResponseEntity_ResponseWithErrorDto
}

type RefinancingDealStateCommon {
  """
  Path: /refinancing/deal/state/{id}
  
  """
  get(params: GetParamsCommonRefinancingDealStateInterplayInput!): StateDto_RefinancingDealDto
}

type RefinancingDealStateMutationCommon {
  """
  Path: /refinancing/deal/state/{id}/completetask
  
  """
  completeTask(params: CompleteTaskParamsCommonRefinancingDealStateMutationInterplayInput!, payload: CompleteTaskDtoInput!): StateDto_RefinancingDealDto

  """
  Path: /refinancing/deal/state/
  
  """
  save(payload: [Float]!): StateDto_RefinancingDealDto

  """
  Path: /refinancing/deal/state/{id}/sendtobuyer
  Отправка сделки покупателю
  """
  sendDealToBuyer(params: SendDealToBuyerParamsCommonRefinancingDealStateMutationInterplayInput!): sendDealToBuyerRefinancingDealStateResponse

  """
  Path: /refinancing/deal/state/{id}
  
  """
  update(params: UpdateParamsCommonRefinancingDealStateMutationInterplayInput!, payload: RefinancingDealDtoInput!): StateDto_RefinancingDealDto
}

enum RefinancingDealStatusCommon {
  CREATED
  WAITING
  EXAMINED
  REJECTED
}

type RefinancingDealStatusCommonCommon {
  """
  Path: /refinancing/dealstatus/
  
  """
  findAll: [EnumDto]
}

"""Статистика по статусам сделок"""
type RefinancingDealStatusStatisticDto {
  """Количество сделок в статусе"""
  count: Float

  """Статус сделки"""
  dealStatus: EnumDto
}

type RefinancingDealTypeCommonCommon {
  """
  Path: /refinancing/dealtype/
  
  """
  findAll: [EnumDto]
}

"""Документ сделки по рефинансированию"""
type RefinancingDocumentDto {
  id: Float

  """Принадлежность документа (предложение или сделка)"""
  parentName: String

  """ID документа в documents-service"""
  documentId: Float

  """Комментарий к документу"""
  comment: String

  """Статус документа"""
  documentStatus: String

  """Тип документа"""
  type: String
}

"""Документ сделки по рефинансированию"""
input RefinancingDocumentDtoInput {
  id: Float

  """Принадлежность документа (предложение или сделка)"""
  parentName: String

  """ID документа в documents-service"""
  documentId: Float

  """Комментарий к документу"""
  comment: String

  """Статус документа"""
  documentStatus: String

  """Тип документа"""
  type: String
}

type RefinancingIntegrationMutationCommon {
  """
  Path: /refinancing/integration/balance/{id}
  Отправки всех КД сделки в очередь постановки на баланс (в integration-gate-service) и смена статуса сделки и её закладных
  """
  sendToQueue(params: SendToQueueParamsInput!, payload: String!): ResponseEntity_Any
}

"""Коэффициент изменения цены закладной"""
type RefinancingMortgageCoefficientDto {
  id: Float

  """Значение, %"""
  coefficientValue: Float

  """Сумма, руб"""
  coefficientSum: Float

  """Учтён в стоимости?"""
  isIncluded: Boolean!

  """Тип коэффициента"""
  coefficientType: EnumDto
}

"""Коэффициент изменения цены закладной"""
input RefinancingMortgageCoefficientDtoInput {
  id: Float

  """Значение, %"""
  coefficientValue: Float

  """Сумма, руб"""
  coefficientSum: Float

  """Учтён в стоимости?"""
  isIncluded: Boolean!

  """Тип коэффициента"""
  coefficientType: EnumDtoInput
}

type RefinancingMortgageCommon {
  """
  Path: /refinancing/mortgage/search
  Поиск КД в сервисе mortgage-service
  """
  mortgageSearch(query: MortgageSearchQueryInput): [MortgageApplicationDto]
}

"""Информация по рефинансированию для КД"""
type RefinancingMortgageDto {
  """Номер активного предложения"""
  activeOfferNo: Float

  """Предложения по рефинансированию"""
  refinancingOffers: [RefinancingOfferDto]

  """Сделки по рефинансированию"""
  refinancingDeals: [RefinancingDealDto]
}

type RefinancingOfferCommon {
  """
  Path: /refinancing/offer/
  
  """
  findAll(query: FindAllQueryCommonRefinancingOfferInterplayInput): [RefinancingOfferDto]

  """
  Path: /refinancing/offer/{id}
  
  """
  get(params: GetParamsCommonRefinancingOfferInterplayInput!): RefinancingOfferDto

  """
  Path: /refinancing/offer/new
  
  """
  getNew: String

  """
  Path: /refinancing/offer/currentuser
  Получение предложений партнера текущего пользователя
  """
  getOffersForCurrentUser: [RefinancingOfferDto]

  """
  Path: /refinancing/offer/{id}/tasks
  
  """
  getState(params: GetStateParamsInput!): StateDto_RefinancingMortgageDto
}

type RefinancingOfferCreditCommon {
  """
  Path: /refinancing/offer/{offerId}/credit/{id}
  Получение закладной
  """
  getRefinancingCredit(params: GetRefinancingCreditParamsCommonRefinancingOfferCreditInterplayInput!): RefinancingCreditDto

  """
  Path: /refinancing/offer/{offerId}/credit/
  Получение списка закладных с использованием пейджинга
  """
  getRefinancingCreditsWithPaging(query: GetRefinancingCreditsWithPagingQueryCommonRefinancingOfferCreditInterplayInput, params: GetRefinancingCreditsWithPagingParamsCommonRefinancingOfferCreditInterplayInput!): Page_RefinancingCreditDto
}

type RefinancingOfferCreditMutationCommon {
  """
  Path: /refinancing/offer/{offerId}/credit/
  Добавление списка закладных
  """
  addRefinancingCredits(params: AddRefinancingCreditsParamsCommonRefinancingOfferCreditMutationInterplayInput!, payload: [RefinancingCreditDtoInput]!): ResponseEntity_Any

  """
  Path: /refinancing/offer/{offerId}/credit/{id}
  Удаление закладной
  """
  deleteRefinancingCredit(params: DeleteRefinancingCreditParamsCommonRefinancingOfferCreditMutationInterplayInput!): ResponseEntity_Any

  """
  Path: /refinancing/offer/{offerId}/credit/{id}
  Обновление закладной
  """
  updateRefinancingCredit(params: UpdateRefinancingCreditParamsCommonRefinancingOfferCreditMutationInterplayInput!, payload: RefinancingCreditDtoInput!): ResponseEntity_RefinancingCreditDto
}

type RefinancingOfferDealCommon {
  """
  Path: /refinancing/offerdeal/{id}/tasks
  Получение списков предложений и сделок + мета-информация
  """
  getState(params: GetStateParamsCommonRefinancingOfferDealInterplayInput!): StateDto_RefinancingMortgageDto
}

type RefinancingOfferDealMutationCommon {
  """
  Path: /refinancing/offerdeal/{id}/completetask
  Завершение задачи в Camunda
  """
  completeTask(params: CompleteTaskParamsCommonRefinancingOfferDealMutationInterplayInput!, payload: CompleteTaskDtoInput!): StateDto_RefinancingMortgageDto

  """
  Path: /refinancing/offerdeal/{id}/sendtobuyer
  Отправка предложения покупателю
  """
  sendOfferToBuyer(params: SendOfferToBuyerParamsCommonRefinancingOfferDealMutationInterplayInput!): StateDto_RefinancingMortgageDto
}

"""Предложение по рефинансированию"""
type RefinancingOfferDto {
  id: Float

  """Тип сделки"""
  dealType: EnumDto

  """Номер предложения"""
  offerNo: Float

  """Дата предложения"""
  offerDate: Any

  """Статус предложения"""
  offerStatus: EnumDto

  """Партнёр - Покупатель"""
  buyer: ExternalPartnerDto!

  """ДКПЗ - Договор купли-продажи закладных"""
  refinancingContract: ExternalContractDto!

  """Документы"""
  refinancingDocuments: [RefinancingDocumentDto]

  """Тип рефинансирования"""
  refinancingType: EnumDto!

  """Партнёр - Продавец"""
  seller: ExternalPartnerDto!

  """Сумма предложения"""
  offerValue: Float

  """КД для рефинансирования"""
  refinancingCredits: [RefinancingCreditDto]
}

"""Предложение по рефинансированию"""
input RefinancingOfferDtoInput {
  id: Float

  """Тип сделки"""
  dealType: EnumDtoInput

  """Номер предложения"""
  offerNo: Float

  """Дата предложения"""
  offerDate: Any

  """Статус предложения"""
  offerStatus: EnumDtoInput

  """Партнёр - Покупатель"""
  buyer: ExternalPartnerDtoInput!

  """ДКПЗ - Договор купли-продажи закладных"""
  refinancingContract: ExternalContractDtoInput!

  """Документы"""
  refinancingDocuments: [RefinancingDocumentDtoInput]

  """Тип рефинансирования"""
  refinancingType: EnumDtoInput!

  """Партнёр - Продавец"""
  seller: ExternalPartnerDtoInput!

  """Сумма предложения"""
  offerValue: Float

  """КД для рефинансирования"""
  refinancingCredits: [RefinancingCreditDtoInput]
}

type RefinancingOfferMutationCommon {
  """
  Path: /refinancing/offer/{id}/changestatus
  
  """
  changeStatus(params: ChangeStatusParamsCommonRefinancingOfferMutationInterplayInput!, payload: String!): Any

  """
  Path: /refinancing/offer/{id}/completetask
  
  """
  completeTask(params: CompleteTaskParamsCommonRefinancingOfferMutationInterplayInput!, payload: CompleteTaskDtoInput!): StateDto_RefinancingMortgageDto

  """
  Path: /refinancing/offer/{id}
  
  """
  remove(params: RemoveParamsCommonRefinancingOfferMutationInterplayInput!): Any

  """
  Path: /refinancing/offer/
  
  """
  save(payload: RefinancingOfferDtoInput!): RefinancingOfferDto

  """
  Path: /refinancing/offer/saveretail
  Сохранение розничного предложения (создание предложений для выбранных КД)
  """
  saveRetailOffer(payload: RefinancingOfferDtoInput!): [RefinancingOfferDto]

  """
  Path: /refinancing/offer/sendtobuyer
  Отправка предложений покупателю
  """
  sendOfferToBuyer(payload: [Float]!): ResponseWithErrorDto

  """
  Path: /refinancing/offer/{id}
  
  """
  update(params: UpdateParamsCommonRefinancingOfferMutationInterplayInput!, payload: RefinancingOfferDtoInput!): RefinancingOfferDto

  """
  Path: /refinancing/offer/{id}/document
  Обновление документов предложения
  """
  updateRefinancingDocuments(params: UpdateRefinancingDocumentsParamsCommonRefinancingOfferMutationInterplayInput!, payload: [RefinancingDocumentDtoInput]!): [RefinancingDocumentDto]

  """
  Path: /refinancing/offer/{id}/validation
  
  """
  validate(params: ValidateParamsCommonRefinancingOfferMutationInterplayInput!, payload: String!): ResponseEntity_ResponseWithErrorDto
}

type RefinancingOfferStatusCommonCommon {
  """
  Path: /refinancing/offerstatus/
  
  """
  findAll: [EnumDto]
}

"""Ценовые параметры"""
type RefinancingPriceParameterDto {
  id: Float

  """ОСЗ - остаток ссудной задолженности, руб"""
  debtBalance: Float

  """Судебные расходы, руб"""
  courtCosts: Float

  """Коэффициенты изменения цен закладной"""
  refinancingMortgageCoefficients: [RefinancingMortgageCoefficientDto]

  """Нестандартная стоимость закладной"""
  isNonstandardCost: Boolean!

  """Доначисленные проценты на ОД, руб"""
  debtAdditionalPercent: Float

  """Пени, руб"""
  penalties: Float

  """Гос. пошлина, руб"""
  stateFee: Float

  """Ставка рефинансирования"""
  refinancingRate: Float

  """Стоимость закладной по соглашению сторон, руб"""
  agreedCost: Float

  """НПЗ, руб"""
  npz: Float

  """Учётные проценты, руб"""
  accountedPercents: Float
}

"""Ценовые параметры"""
input RefinancingPriceParameterDtoInput {
  id: Float

  """ОСЗ - остаток ссудной задолженности, руб"""
  debtBalance: Float

  """Судебные расходы, руб"""
  courtCosts: Float

  """Коэффициенты изменения цен закладной"""
  refinancingMortgageCoefficients: [RefinancingMortgageCoefficientDtoInput]

  """Нестандартная стоимость закладной"""
  isNonstandardCost: Boolean!

  """Доначисленные проценты на ОД, руб"""
  debtAdditionalPercent: Float

  """Пени, руб"""
  penalties: Float

  """Гос. пошлина, руб"""
  stateFee: Float

  """Ставка рефинансирования"""
  refinancingRate: Float

  """Стоимость закладной по соглашению сторон, руб"""
  agreedCost: Float

  """НПЗ, руб"""
  npz: Float

  """Учётные проценты, руб"""
  accountedPercents: Float
}

type RefinancingServiceMutationCommon {
  """
  Path: /refinancing/calculation
  Расчёт стоимости закладной
  """
  calculationCreditPrice(payload: RefinancingCreditDtoInput!): ResponseEntity_RefinancingCreditDto
}

type RefinancingTypeCommonCommon {
  """
  Path: /refinancing/refinancingtype/
  
  """
  findAll: [EnumDto]
}

type RefinancingVersionCommon {
  """
  Path: /version/
  
  """
  getVersion: ResponseEntity_Any
}

type RegionDto {
  code: String
  name: String
}

enum RegistrationNoType {
  CADASTRAL
  CONDITIONAL
  INVENTORY
}

enum RegistrationType {
  TEMPORARY
  PERMANENT
}

input RemoveParamsCommonPersonServiceApiMutationInterplayInput {
  id: Float!
}

input RemoveParamsCommonRefinancingCreditMutationInterplayInput {
  id: Float!
}

input RemoveParamsCommonRefinancingDealMutationInterplayInput {
  """ИД сделки"""
  id: Float!
}

input RemoveParamsCommonRefinancingOfferMutationInterplayInput {
  id: Float!
}

type ReportsCommon {
  """
  Path: /refinancing/deal/{dealId}/transfer-act-report
  Формирование акта приема-передачи прав по закладным
  """
  generateAct(params: GenerateActParamsInput!): ResponseEntity_Float
}

"""Реквизиты получателя"""
type RequisiteDto {
  bank: String
  bik: String
  corrAccount: String
  inn: String
  accountRecipient: String

  """Счет ЦЖЗ"""
  accountRecipientDop: String
  accountOwnerID: Float

  """Аккредитивный счет"""
  accreditiveAccount: String
}

type ResidenceCauseDto {
  code: String
  name: String
}

type ResponseEntity_Any {
  headers: HttpHeaders
  body: Any
  EMPTY: HttpEntity_Any
  status: Any
  statusCodeValue: Float
  statusCode: HttpStatus
}

type ResponseEntity_Float {
  headers: HttpHeaders
  body: [Float]
  EMPTY: HttpEntity_Any
  status: Any
  statusCodeValue: Float
  statusCode: HttpStatus
}

type ResponseEntity_RefinancingCreditDto {
  headers: HttpHeaders
  body: RefinancingCreditDto
  EMPTY: HttpEntity_Any
  status: Any
  statusCodeValue: Float
  statusCode: HttpStatus
}

type ResponseEntity_ResponseWithErrorDto {
  headers: HttpHeaders
  body: ResponseWithErrorDto
  EMPTY: HttpEntity_Any
  status: Any
  statusCodeValue: Float
  statusCode: HttpStatus
}

"""Класс содержащий в себе список найденных ошибок"""
type ResponseWithErrorDto {
  """Список типов ошибок рефинансирования"""
  errorMessages: [ErrorTypeEnumDto]

  """Флаг наличия ошибок"""
  hasErrors: Boolean

  """Возвращает список всех Id объектов, в которых произошла ошибка"""
  allIdsWithError: [Float]
}

"""Продавец - физическое лицо"""
type SellerPersonDto {
  id: Float
  version: Float

  """Фамилия"""
  lastName: String

  """Имя"""
  firstName: String

  """Серия"""
  docSeries: String

  """Контактный телефон"""
  phone: String

  """Действителен до"""
  validDate: Any
  identityDocIssueUnit: String

  """Кем выдан"""
  issuedBy: String

  """Отчество"""
  middleName: String

  """Номер"""
  docNo: String

  """Дата выдачи"""
  issueDate: Any

  """Дата рождения"""
  birthDate: Any
}

input SendDealToBuyerParamsCommonRefinancingDealStateMutationInterplayInput {
  """ID сделки"""
  id: Float!
}

union sendDealToBuyerRefinancingDealStateResponse = StateDto_RefinancingDealDto | ResponseWithErrorDto

input SendOfferToBuyerParamsCommonRefinancingOfferDealMutationInterplayInput {
  """ID КД в mortgage-service"""
  id: Float!
}

input SendToQueueParamsInput {
  """ИД сделки"""
  id: Float!
}

input SetEnabledParamsCommonNewAthenaStubMutationInterplayInput {
  """Включить или выключить заглушку"""
  enabled: Boolean!
}

enum SocialGroupType {
  MATERNITYCAPITALRECIPIENT
  NISPARTICIPANT
  EMPTY
}

type Sort {
  DEFAULT_DIRECTION: Direction
  serialVersionUID: Float
  orders: [Order]
  orderFor: Order
}

type Stat {
  processed: [LatestStubbed]
  applicationStartTime: Any
  audit: [AuditRecord]
  enabled: Boolean
}

type State {
  """Ошибки бизнес проверок."""
  rules: ResponseWithErrorDto

  """История задач по бизнес процессу."""
  history: [HistoryTaskDto]

  """Активные задачи по бизнес процессу для текущего пользователя."""
  tasks: [TaskDto]
}

type StateDto_RefinancingDealDto {
  data: RefinancingDealDto
  state: State
}

type StateDto_RefinancingMortgageDto {
  data: RefinancingMortgageDto
  state: State
}

enum Status {
  NEW
  DISQUALIFIED
  DONE
  FILLINGPARAMS
  DATEAPPROVAL
  UNDEFINED
  PRINTINGDOCS
  TRANSFERTOSTORAGE
  DATEPICKING
  MAINTENANCE
  CHANGEDOCS
  SIGNINGDOCS
  WAITING
  REGISTRATION
}

type TaskDto {
  owner: String
  processInstanceId: String
  variables: Any
  canClaim: Boolean
  created: String
  description: String
  priority: Float
  delegationState: String
  followUp: String
  taskDefinitionKey: String
  isAssignee: Boolean
  due: String
  isOwner: Boolean
  name: String
  taskAssign: Boolean
  taskWork: Boolean
  comment: String
  id: String
  assignee: String
  needValidate: Boolean
}

input UpdateParamsCommonPersonServiceApiMutationInterplayInput {
  id: Float!
}

input UpdateParamsCommonRefinancingCreditMutationInterplayInput {
  id: Float!
}

input UpdateParamsCommonRefinancingDealMutationInterplayInput {
  id: Float!
}

input UpdateParamsCommonRefinancingDealStateMutationInterplayInput {
  id: Float!
}

input UpdateParamsCommonRefinancingOfferMutationInterplayInput {
  id: Float!
}

input UpdateRefinancingCreditParamsCommonRefinancingDealCreditMutationInterplayInput {
  """ID сделки"""
  dealId: Float!

  """ID закладной"""
  id: Float!
}

input UpdateRefinancingCreditParamsCommonRefinancingOfferCreditMutationInterplayInput {
  """ID предложения"""
  offerId: Float!

  """ID закладной"""
  id: Float!
}

input UpdateRefinancingDocumentsParamsCommonRefinancingDealMutationInterplayInput {
  """ID сделки"""
  id: Float!
}

input UpdateRefinancingDocumentsParamsCommonRefinancingOfferMutationInterplayInput {
  """ID предложения"""
  id: Float!
}

input UpdateStatusParamsCommonRefinancingCreditMutationInterplayInput {
  """ИД закладной"""
  id: Float!
}

input ValidateParamsCommonRefinancingDealMutationInterplayInput {
  id: Float!
}

input ValidateParamsCommonRefinancingOfferMutationInterplayInput {
  id: Float!
}

type WallsMaterialTypeDto {
  code: String
  name: String
}
